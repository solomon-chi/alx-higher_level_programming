The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Write a function that divides all elements of a matrix.

    Prototype: def matrix_divided(matrix, div):
    matrix must be a list of lists of integers or floats,
    otherwise raise a TypeError exception with the message matrix must be a matrix (list of lists)
    of integers/floats

    Each row of the matrix must be of the same size, otherwise raise a TypeError exception
    with the message Each row of the matrix must have the same size

    div must be a number (integer or float), otherwise raise a TypeError exception
    with the message div must be a number

    div canâ–’~@~Yt be equal to 0, otherwise raise a ZeroDivisionError exception
    with the message division by zero

    All elements of the matrix should be divided by div, rounded to 2 decimal places
    Returns a new matrix
    You are not allowed to import any module

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.0, 4.0, 3.0], [10.0, 8.0, 6.0], [20.0, 16.0, 12.0]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[3.33, 2.67, 2.0], [6.67, 5.33, 4.0], [13.33, 10.67, 8.0]]
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in matrix_divided
ZeroDivisionError: division by zero
>>> matrix = [[10, 8, 6], [20, 16, 12], [40, 32, 24]]
>>> div = "5"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 10, in matrix_divided
TypeError: div must be a number

